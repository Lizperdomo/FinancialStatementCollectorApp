// <auto-generated />
using System;
using Learn.Api.Repository.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Learn.Api.Repository.EFCore.Migrations
{
    [DbContext(typeof(AppLearnContext))]
    [Migration("20250812152836_InitAll")]
    partial class InitAll
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Learn.Api.Business.Objects.Entities.FinancialStatement.MonthlyFees", b =>
                {
                    b.Property<int>("IdHouse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Agreements")
                        .HasColumnType("TEXT");

                    b.Property<int>("Income")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHouse");

                    b.ToTable("MonthlyFees");
                });

            modelBuilder.Entity("Learn.Api.Business.Objects.Entities.FinancialStatement.SearchAccount", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("FinancialStatement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameResident")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Service")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Code");

                    b.ToTable("SearchAccount");
                });

            modelBuilder.Entity("Learn.Api.Business.Objects.Entities.FinancialStatement.VisualizeAccount", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("FinancialStatement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameResident")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Service")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Code");

                    b.ToTable("VisualizeAccounts");
                });

            modelBuilder.Entity("Learn.Api.Business.Objects.Entities.FinancialStatement.VisualizeHomes", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("FinancialStatement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameResident")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Service")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Code");

                    b.ToTable("VisualizeHomes");
                });

            modelBuilder.Entity("Learn.Api.BusinessObjects.Entities.Chargers.AssociatedCharge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ChargeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiscIncomeType")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChargeId");

                    b.ToTable("AssociatedCharges");
                });

            modelBuilder.Entity("Learn.Api.BusinessObjects.Entities.Chargers.Charge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AgreementNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Debt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentsCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptFolio")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("Learn.Api.BusinessObjects.Entities.Receipts.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Concept")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Folio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("HouseId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResidentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Surcharge")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("Learn.Api.BusinessObjects.Entities.Chargers.AssociatedCharge", b =>
                {
                    b.HasOne("Learn.Api.BusinessObjects.Entities.Chargers.Charge", "Charge")
                        .WithMany("AssociatedCharges")
                        .HasForeignKey("ChargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charge");
                });

            modelBuilder.Entity("Learn.Api.BusinessObjects.Entities.Chargers.Charge", b =>
                {
                    b.Navigation("AssociatedCharges");
                });
#pragma warning restore 612, 618
        }
    }
}
